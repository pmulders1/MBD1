/*
 * Please see the included README.md file for license terms and conditions.
 */

// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.

var pokedexController = null;
var geoCachingController = null;

function onAppReady() {
    if( navigator.splashscreen && navigator.splashscreen.hide ) {   // Cordova API detected
        navigator.splashscreen.hide() ;
    }
    
    $(document).on('swipeleft', goBack);
    
    $.mobile.loading("show", {
        text: "Please wait for innitial data...",
        textVisible: true
    });
    
    $(document).bind('pagebeforechange', function(e, data) {
        e.preventDefault();
        $.mobile.activePage.find('.ui-btn-active').removeClass('ui-btn-active');
    });
    
    pokedexController = new PokedexController(function(){
        geoCachingController = new GeoCachingController(function(){
            $.mobile.loading("hide");
            $(document).unbind('pagebeforechange');
        });
    });
}   
document.addEventListener("app.Ready", onAppReady, false);
$(document).on("pageshow", "#joupokemon", function(){
    window.open('http://google.com/maps?//daddr=51.821374,5.563648', '_system', 'location=yes'); 
});
$(document).on("pageshow","#settings",function(){
    checkLanguage();
    var firstName = window.localStorage.getItem('firstname');
    var lastName = window.localStorage.getItem('lastname');

    if(firstName !== 'undefined'){
        $('#firstName').val(firstName);
    }
    if(lastName !== 'undefined'){
        $('#lastName').val(lastName);
    }
    
    $(document).on("tap","#clearCache",function(){
        window.localStorage.clear();
        $('.confirmDialog').toggle();
        $('.dialogContent').html('Cache is cleared!');
        setTimeout(function(){
            $('.confirmDialog').toggle();
            $('.dialogContent').html('');
        }, 3000);
    });
    
    $(document).on("tap","#externalApiLink",function(){
        window.open('http://pokeapi.co/', '_system', 'location=yes');
    });
});

$(document).on("pagebeforehide", "#settings", function(){
    window.localStorage.setItem('firstname', $('#firstName').val());
    window.localStorage.setItem('lastname', $('#lastName').val());
});
$( window ).unload(function() {
    window.localStorage.setItem('firstname', $('#firstName').val());
    window.localStorage.setItem('lastname', $('#lastName').val());
});
// Public functions
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
function checkLanguage() {
    console.log('ho');
      navigator.globalization.getPreferredLanguage(
        function (language) {console.log('language: ' + language.value + '\n');},
        function () {console.log('Error getting language\n');}
      );
    }
function goBack(event){
    event.preventDefault();
    var url = "";
    switch(event.target.id){
        case "single":
            url = "index.html";
            break;
        case "singlepokemon":
            url = "pokedex.html";
            break;
        case "joupokemon":
            url = "index.html";
            break;
        case "vangpokemon":
            url = "index.html";
            break;
    }
    
    $.mobile.pageContainer.pagecontainer("change", url);
}

function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
  var R = 6371; // Radius of the earth in km
  var dLat = deg2rad(lat2-lat1);  // deg2rad below
  var dLon = deg2rad(lon2-lon1); 
  var a = 
    Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
    Math.sin(dLon/2) * Math.sin(dLon/2)
    ; 
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
  var d = R * c; // Distance in km
  return d;
}

function deg2rad(deg) {
  return deg * (Math.PI/180)
}
// document.addEventListener("deviceready", onAppReady, false) ;
// document.addEventListener("onload", onAppReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.
